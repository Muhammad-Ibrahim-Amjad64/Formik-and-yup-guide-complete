[{"E:\\Ibrahim\\REACT JS\\PURCHASED UDEMY COURSE\\APPLICATIONS\\16 Working with forms and user input\\01-starting-project\\src\\index.js":"1","E:\\Ibrahim\\REACT JS\\PURCHASED UDEMY COURSE\\APPLICATIONS\\16 Working with forms and user input\\01-starting-project\\src\\App.js":"2","E:\\Ibrahim\\REACT JS\\PURCHASED UDEMY COURSE\\APPLICATIONS\\16 Working with forms and user input\\01-starting-project\\src\\components\\SimpleInput.js":"3","E:\\Ibrahim\\REACT JS\\PURCHASED UDEMY COURSE\\APPLICATIONS\\16 Working with forms and user input\\01-starting-project\\src\\hooks\\use-input.js":"4","E:\\Ibrahim\\REACT JS\\PURCHASED UDEMY COURSE\\APPLICATIONS\\16 Working with forms and user input\\01-starting-project\\src\\components\\BasicForm.js":"5","E:\\Ibrahim\\REACT JS\\PURCHASED UDEMY COURSE\\APPLICATIONS\\16 Working with forms and user input\\01-starting-project\\src\\components\\MeraInput.js":"6","E:\\Ibrahim\\REACT JS\\PURCHASED UDEMY COURSE\\APPLICATIONS\\16 Working with forms and user input\\01-starting-project\\src\\schemas\\index.js":"7"},{"size":179,"mtime":1648632222000,"results":"8","hashOfConfig":"9"},{"size":320,"mtime":1670750352095,"results":"10","hashOfConfig":"9"},{"size":3947,"mtime":1663009126682,"results":"11","hashOfConfig":"9"},{"size":1668,"mtime":1662808098998,"results":"12","hashOfConfig":"9"},{"size":669,"mtime":1648632300000,"results":"13","hashOfConfig":"9"},{"size":3224,"mtime":1670846451314,"results":"14","hashOfConfig":"9"},{"size":670,"mtime":1670844424058,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"of65bp",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Ibrahim\\REACT JS\\PURCHASED UDEMY COURSE\\APPLICATIONS\\16 Working with forms and user input\\01-starting-project\\src\\index.js",[],["34","35"],"E:\\Ibrahim\\REACT JS\\PURCHASED UDEMY COURSE\\APPLICATIONS\\16 Working with forms and user input\\01-starting-project\\src\\App.js",["36","37"],"import SimpleInput from './components/SimpleInput';\nimport BasicForm from './components/BasicForm'\nimport MeraInput from \"./components/MeraInput\"\nfunction App() {\n  return (\n    <div className=\"app\">\n        <MeraInput></MeraInput>\n      {/* <SimpleInput />\n      <BasicForm/> */}\n    </div>\n  );\n}\n\nexport default App;\n","E:\\Ibrahim\\REACT JS\\PURCHASED UDEMY COURSE\\APPLICATIONS\\16 Working with forms and user input\\01-starting-project\\src\\components\\SimpleInput.js",["38","39"],"import { useEffect, useState } from \"react\";\nimport { useRef } from \"react\";\nimport useInput from \"../hooks/use-input\";\nconst SimpleInput = (props) => {\n\n  const nameValidator = (value) => value.trim() !== \"\";\n\n  const {\n    valueIsValid: enterNameIsValid,\n    hasError: InputisInValid,\n    value: name,\n    onBlurInputValueHandler: onBlurInputHandler,\n    InputValueHandler: InputHandler,\n    resetForm: resetFormHandler,\n  } = useInput(nameValidator);\n\n  \n  // using custom hook for name validator\n  const emailValidator = (value)=>{return value.includes('@')  } \nconst {\n  value:email,\n  hasError:emailIsInvalid,\n  valueIsValid:emailIsValid,\n  InputValueHandler:emailInputHandler,\n  onBlurInputValueHandler:onBlurEmailInputHandler,\n  resetForm:resetEmailForm\n} = useInput(emailValidator)\n\n\n  const NameInputRef = useRef();\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    // setInputTouched(true);   lets test ////===========\n    if (!enterNameIsValid) {\n      // ye change\n      NameInputRef.current.focus();\n      return;\n    }\n\n    // setEnterNameIsValid(true);\n    console.log(\"Ref se lia gya input\", NameInputRef.current.value);\n    console.log(\"states se lia gya input\", name);\n    // NameInputRef.current.value = ''\n    // using reset function of use-hook instead of them ======\n    // setName(\"\");\n    resetFormHandler();\n    resetEmailForm();\n    // setEmail(\"\");  ///+++++++\n    // setemailTouched(false);//++++++++++++++++++++\n    // setInputTouched(false) // ye islia add krna para coz hm name empty string bna rhy thy so phr se invalid ho rha th once the form is submitted it will behave like it never be submitted\n\n    NameInputRef.current.focus();\n  };\n//----------------------------\n  // LET A FORMISVALID STATE INSTEAD OF USEEFFECT\n\n  // Email Form ka samaan  // COMMENTS OUT KR RHA TO USE IT USING CUSTOM HOOK \n\n  // const [email, setEmail] = useState(\"\");\n  // const [emailTouched, setemailTouched] = useState(false);\n\n  // const emailIsValid = email.includes(\"@\"); // yahan validation logic aa a gi\n  // const emailIsInvalid = emailTouched && !emailIsValid;\n\n  // const emailInputHandler = (event) => {\n  //   // setemailTouched(true)\n  //   setEmail(event.target.value);\n  // };\n\n  // const onBlurEmailInputHandler = () => {\n  //   if (email.trim() === \"\") {\n  //     setemailTouched(true);\n  //     return;\n  //   }\n  //   setemailTouched(true)   // yahan upper walay if ki zaroorat nai ha \n\n  // };\n\n  //---------------------------------\n  //  verifying the overall form validity\n  let formIsValid = false;\n  if (enterNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  // const nameInputClasses = InputisInValid\n  const nameInputClasses = InputisInValid\n    ? \"form-control invalid \"\n    : \"form-control\";\n\n  const emailInputClasses = emailIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          // className={ InputisInValid ? \"invalid\" : \"\"}\n          value={name}\n          onChange={InputHandler}\n          ref={NameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onBlur={onBlurInputHandler}\n        />\n      </div>\n      {InputisInValid && (\n        <p className=\"error-text\">Please enter a valid name </p>\n      )}\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          value={email}\n          onChange={emailInputHandler}\n          onBlur={onBlurEmailInputHandler}\n          id=\"email\"\n        />\n      </div>\n\n      {emailIsInvalid && (\n        <p className=\"error-text\">Please enter a valid email </p>\n      )}\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid} type=\"submit\">\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n\n// SIMPLIFYING\n","E:\\Ibrahim\\REACT JS\\PURCHASED UDEMY COURSE\\APPLICATIONS\\16 Working with forms and user input\\01-starting-project\\src\\hooks\\use-input.js",["40"],"import react from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst useInput=(validateInput)=>{\r\n    const [value, setValue] = useState('');\r\n    const [InputTouched, setInputTouched] = useState(false);\r\n\r\n    const valueIsValid = validateInput(value)\r\n    // const valueIsValid = \"\"//value.trim() !== ''; // this should be generic\r\n    const hasError = InputTouched && !valueIsValid;\r\n    // const InputisInValid = InputTouched && !valueIsValid; // haserror to add invlaid css classes \r\n\r\n    const InputValueHandler = (event) => {\r\n    setValue(event.target.value);\r\n    \r\n      };\r\n\r\n    const onBlurInputValueHandler=()=>{\r\n        if (value.trim() === \"\") {\r\n          setInputTouched(true)\r\n          return;\r\n        }\r\n        \r\n    \r\n      }\r\n    const resetForm = ()=>{\r\n        setValue('')\r\n        setInputTouched(false)\r\n    }\r\n\r\n\r\nreturn{\r\n    valueIsValid,\r\n    value,\r\n    hasError,\r\n    onBlurInputValueHandler,\r\n    resetForm,\r\n    InputValueHandler\r\n}\r\n}\r\n\r\nexport default useInput;\r\n\r\n\r\n// crap\r\n\r\n// const InputValueHandler = (event) => {\r\n    \r\n//     setValue(event.target.value);  // react shedules that state  update so validation event.target.value ko upr logic\r\n\r\n//     // Tried and this is not instant \r\n//     // if (name.trim()!=='') {\r\n//     //   setEnterNameIsValid(true)\r\n      \r\n//     // }\r\n    \r\n//     // if (enterNameIsValid) {\r\n//     //   // setEnterNameIsValid(true)\r\n      \r\n//     // } \r\n\r\n//   };\r\n\r\n// const onBlurInputHandler=()=>{\r\n    // if (name.trim() === \"\") {\r\n//       setInputTouched(true)\r\n//       console.log(\"galat\");\r\n//       // setEnterNameIsValid(false);\r\n//       return;\r\n//     }\r\n    \r\n\r\n//   }","E:\\Ibrahim\\REACT JS\\PURCHASED UDEMY COURSE\\APPLICATIONS\\16 Working with forms and user input\\01-starting-project\\src\\components\\BasicForm.js",[],"E:\\Ibrahim\\REACT JS\\PURCHASED UDEMY COURSE\\APPLICATIONS\\16 Working with forms and user input\\01-starting-project\\src\\components\\MeraInput.js",[],"E:\\Ibrahim\\REACT JS\\PURCHASED UDEMY COURSE\\APPLICATIONS\\16 Working with forms and user input\\01-starting-project\\src\\schemas\\index.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":19},{"ruleId":"45","severity":1,"message":"49","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":17},{"ruleId":"45","severity":1,"message":"50","line":1,"column":10,"nodeType":"47","messageId":"48","endLine":1,"endColumn":19},{"ruleId":"45","severity":1,"message":"51","line":1,"column":21,"nodeType":"47","messageId":"48","endLine":1,"endColumn":29},{"ruleId":"45","severity":1,"message":"52","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":13},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'SimpleInput' is defined but never used.","Identifier","unusedVar","'BasicForm' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'react' is defined but never used.","no-global-assign","no-unsafe-negation"]